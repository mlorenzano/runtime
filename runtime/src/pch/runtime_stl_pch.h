/*
 * This is a precompiled header file for use in Xcode / Mac GCC /
 * GCC >= 3.4 / VC to greatly speed the building of Qt Creator.
 */

#if defined __cplusplus

#include <cassert>            // C Diagnostics Library (header)
#include <cctype>             // Character handling functions (header)
#include <cerrno>             // C Errors (header)
#include <cfenv>              // Floating-point environment (header)
#include <cfloat>             // Characteristics of floating-point types (header)
#include <cinttypes>          // C integer types (header)
#include <ciso646>            // ISO 646 Alternative operator spellings (header)
#include <climits>            // Sizes of integral types (header)
#include <clocale>            // C localization library (header)
#include <cmath>              // C numerics library (header)
#include <csetjmp>            // Non local jumps (header)
#include <csignal>            // C library to handle signals (header)
#include <cstdarg>            // Variable arguments handling (header)
#include <cstdbool>           // Boolean type (header)
#include <cstddef>            // C Standard definitions (header)
#include <cstdint>            // Integer types (header)
#include <cstdio>             // C library to perform Input/Output operations (header)
#include <cstdlib>            // C Standard General Utilities Library (header)
#include <cstring>            // C Strings (header)
#include <ctgmath>            // Type-generic math (header)
#include <ctime>              // C Time Library (header)
#include <cuchar>             // Unicode characters (header)
#include <cwchar>             // Wide characters (header)
#include <cwctype>            // Wide character type (header)

#include <array>              // Array header (header)
#include <bitset>             // Bitset header (header)
#include <deque>              // Deque header (header)
#include <forward_list>       // Forward list (header)
#include <list>               // List header (header)
#include <map>                // Map header (header)
#include <queue>              // Queue header (header)
#include <set>                // Set header (header)
#include <stack>              // Stack header (header)
#include <unordered_map>      // Unordered map header (header)
#include <unordered_set>      // Unordered set header (header)
#include <vector>             // Vector header (header)

#include <atomic>             // Atomic (header)
#include <condition_variable> // Condition variable (header)
#include <future>             // Future (header)
#include <mutex>              // Mutex (header)
#include <thread>             // Thread (header)

#include <algorithm>          // Standard Template Library: Algorithms (library )
#include <chrono>             // Time library (header)
#include <codecvt>            // Unicode conversion facets (header)
#include <complex>            // Complex numbers library (header)
#include <exception>          // Standard exceptions (header)
#include <functional>         // Function objects (header)
#include <initializer_list>   // Initializer list (header)
#include <iterator>           // Iterator definitions (header)
#include <limits>             // Numeric limits (header)
#include <locale>             // Localization library (header)
#include <memory>             // Memory elements (header)
#include <new>                // Dynamic memory (header)
#include <numeric>            // Generalized numeric operations (header)
#include <random>             // Random (header)
#include <ratio>              // Ratio header (header)
#include <regex>              // Regular Expressions (header)
#include <stdexcept>          // Exception classes (header)
#include <string>             // Strings (header)
#include <system_error>       // System errors (header)
#include <tuple>              // Tuple library (header)
#include <typeindex>          // Type index (header)
#include <typeinfo>           // Type information (header)
#include <type_traits>        // type_traits (header)
#include <utility>            // Utility components (header)
#include <valarray>           // Library for arrays of numeric values (header)

#endif
